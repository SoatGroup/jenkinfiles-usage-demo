// WIP
pipeline {

    agent any

    options {
        timestamps()
        disableConcurrentBuilds()
        timeout(time: 1, unit: 'MINUTES')
    }

    stages {
        stage('SIMPLE CONDITION') {
            when {
                anyOf {
                     branch 'master'
                     expression { BRANCH_NAME ==~ /feature\/.*/ }
                }
            }
            steps {
                echo('Executed only on branch "master" and branch "feature/*" !')
            }
        }
        stage('FAKE SEND EMAIL CONDITION') {
            when {
                beforeInput false
                environment name: 'SEND_EMAIL', value: 'true'
            }
            input {
                message "Set the release name"
                ok "Deploy the release"
                parameters {
                    string(name: 'RELEASE_NAME', defaultValue: '0.0.1', description: 'The fake release name for templating')
                    booleanParam(name: 'SEND_EMAIL', defaultValue: true, description: 'Should we send a fake email (only yes will run this stage) ?')
                }
            }
            steps {
                echo("Executed fake send email - Template email with release name ${RELEASE_NAME} !")
            }
        }
        stage('NEVER EXECUTED') {
            when {
                environment name: 'RELEASE_NAME', value: '0.0.1'
            }
            steps {
                echo('Should never be executed !')
            }
        }
        stage('NEVER EXECUTED - BEFORE INPUT') {
            when {
                beforeInput true
                environment name: 'RELEASE_NAME', value: '0.0.1'
            }
            input {
                message "Set the release name"
                ok "Deploy the release"
                parameters {
                    string(name: 'RELEASE_NAME', defaultValue: '0.0.1', description: 'The fake release name for templating')
                }
            }
            steps {
                echo('Should never be executed !')
            }
        }
        stage('DOCKER - START CONTAINER') {
            when {
                branch 'branch-that-doesnt-exist'
            }
            agent {
                docker {
                    image 'alpine:3.9'
                }
            }
            steps {
                echo('Should never be executed !')
            }
        }
        stage('DOCKER - NO CONTAINER START') {
            when {
                beforeAgent true
                branch 'branch-that-doesnt-exist'
            }
            agent {
                docker {
                    image 'alpine:3.9'
                }
            }
            steps {
                echo('Should never be executed !')
            }
        }
    }
    
}